/** 
 * 由 CoCo 源代码计划解包器解包
 *
 * 模块 ID：2144
 */

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.en = undefined;
exports.en = {
  DUPLICATE_BLOCK: "Copy",
  COPY_ALL: "Copy %1 Blocks",
  ADD_COMMENT: "Add Comment",
  REMOVE_COMMENT: "Remove Comment",
  DELETE_BLOCK: "Delete Block",
  DELETE_X_BLOCKS: "Delete %1 Blocks",
  DELETE_ALL_BLOCKS: "Delete all %1 blocks?",
  CLEAN_UP: "Clean up Blocks",
  COLLAPSE_BLOCK: "Collapse Block",
  COLLAPSE_ALL: "Collapse All Blocks",
  EXPAND_BLOCK: "Expand Block",
  EXPAND_ALL: "Expand All Blocks",
  UNDO: "Undo",
  REDO: "Redo",
  PASTE: "Paste",
  COPY_AND_PASTE: "Copy and Paste",
  GLOBAL_COMMENT: "Add Workspace Comment",
  COMMENT: "Comment",
  BLUE_COMMENT: "Blue Comment",
  GREEN_COMMENT: "Green Comment",
  YELLOW_COMMENT: "Yellow Comment",
  RED_COMMENT: "Red Comment",
  DELETE_COMMENT: "Delete Comment",
  WHATS_THIS: "Describe this functionality...",
  SAY_SOMETHING: "Say something...",
  START_ON_CLICK: "%1 When Start clicked",
  START_ON_CLICK_2: "%1 When Start clicked %2 %3",
  ON_RUNNING_GROUP_ACTIVATED: "%1 On running group activated",
  SELF_LISTEN: "%1 When I receive %2 %3 %4",
  SELF_BROADCAST: "Broadcast %1",
  SELF_BROADCAST_AND_WAIT: "Broadcast and wait",
  WHEN: "%1 when %2 %3",
  TERMINATE: "terminate",
  REPEAT_FOREVER: "Forever %1 %2",
  REPEAT_N_TIMES: "Repeat %1 times %2 %3",
  REPEAT_FOREVER_UNTIL: "Repeat forever until %1 %2 %3",
  BREAK: "Quit loop",
  WARP: "Warp %1 %2",
  WAIT_SECS: "Wait %1 secs",
  WAIT_UNTIL: "Wait until %1",
  DESTRUCT: "Destruct",
  CONTROLS_IF_MSG_IF: "If",
  CONTROLS_IF_MSG_ELSEIF: "Else if",
  CONTROLS_IF_MSG_ELSE: "Else",
  CONTROLS_IF_TOOLTIP_1: "If a value is true, then do some statements.",
  CONTROLS_IF_TOOLTIP_2: "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
  CONTROLS_IF_TOOLTIP_3: "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
  CONTROLS_IF_TOOLTIP_4: "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
  TELL: "Make %1 run %2 %3",
  SYNC_TELL: "Make %1 run and wait %2 %3",
  GET_TIME: "Current %1",
  YEAR: "Year",
  MONTH: "Month",
  DATE: "Date",
  WEEK: "Week",
  WEEK0: "Sunday",
  WEEK1: "Monday",
  WEEK2: "Tuesday",
  WEEK3: "Wednesday",
  WEEK4: "Thursday",
  WEEK5: "Friday",
  WEEK6: "Saturday",
  HOUR: "Hour",
  MINUTE: "Minute",
  SECOND: "Second",
  TIMER: "Timer",
  RESET_TIMER: "Reset timer",
  MATH_NUMBER_TOOLTIP: "A number.",
  RANDOM_NUM: "Pick random %1 to %2",
  DIVISIBLE_BY: "%1 is divisible by %2",
  CALCULATE: "Math expression %1",
  CALCULATE_TOOLTIPS: "Enter math expression and calculate the results quickly",
  MATH_ARITHMETIC: "%1 %2 %3",
  MATH_ARITHMETIC_TOOLTIP_ADD: "Return the sum of the two numbers.",
  MATH_ARITHMETIC_TOOLTIP_MINUS: "Return the difference of the two numbers.",
  MATH_ARITHMETIC_TOOLTIP_MULTIPLY: "Return the product of the two numbers.",
  MATH_ARITHMETIC_TOOLTIP_DIVIDE: "Return the quotient of the two numbers.",
  MATH_ARITHMETIC_TOOLTIP_POWER: "Return the first number raised to the power of the second number.",
  MATH_SINGLE: "%1 %2",
  MATH_SINGLE_OP_ROOT: "Sqrt",
  MATH_SINGLE_TOOLTIP_ROOT: "Return the square root of a number.",
  MATH_SINGLE_OP_ABSOLUTE: "Abs",
  MATH_SINGLE_TOOLTIP_ABS: "Return the absolute value of a number.",
  MATH_SINGLE_TOOLTIP_NEG: "Return the negation of a number.",
  MATH_SINGLE_TOOLTIP_LN: "Return the natural logarithm of a number.",
  MATH_SINGLE_TOOLTIP_LOG10: "Return the base 10 logarithm of a number.",
  MATH_SINGLE_TOOLTIP_EXP: "Return e to the power of a number.",
  MATH_SINGLE_TOOLTIP_POW10: "Return 10 to the power of a number.",
  MATH_ROUND: "%1 %2",
  MATH_ROUND_TOOLTIP: "Round a number up or down.",
  MATH_ROUND_OPERATOR_ROUND: "Round",
  MATH_ROUND_OPERATOR_ROUNDUP: "Round up",
  MATH_ROUND_OPERATOR_ROUNDDOWN: "Round down",
  MATH_MODULO_TITLE: "Remainder of %1 ÷ %2",
  MATH_MODULO_TOOLTIP: "Return the remainder from dividing the two numbers.",
  MATH_NUMBER_PROPERTY: "%1 %2",
  MATH_IS_EVEN: "even",
  MATH_IS_ODD: "odd",
  MATH_IS_PRIME: "prime",
  MATH_IS_WHOLE: "whole",
  MATH_IS_POSITIVE: "positive",
  MATH_IS_NEGATIVE: "negative",
  MATH_IS_TOOLTIP: "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",
  MATH_DEGREES: "degrees",
  LOGIC_NEGATE_TITLE: "%1 false",
  LOGIC_BOOLEAN_TRUE: "true",
  LOGIC_BOOLEAN_FALSE: "false",
  LOGIC_BOOLEAN_TOOLTIP: "Returns either true or false.",
  LOGIC_COMPARE: "%1 %2 %3",
  LOGIC_COMPARE_TOOLTIP_EQ: "Return true if both inputs equal each other.",
  LOGIC_COMPARE_TOOLTIP_NEQ: "Return true if both inputs are not equal to each other.",
  LOGIC_COMPARE_TOOLTIP_LT: "Return true if the first input is smaller than the second input.",
  LOGIC_COMPARE_TOOLTIP_LTE: "Return true if the first input is smaller than or equal to the second input.",
  LOGIC_COMPARE_TOOLTIP_GT: "Return true if the first input is greater than the second input.",
  LOGIC_COMPARE_TOOLTIP_GTE: "Return true if the first input is greater than or equal to the second input.",
  LOGIC_OPERATION: "%1 %2 %3",
  LOGIC_OPERATION_TOOLTIP_AND: "Return true if both inputs are true.",
  LOGIC_OPERATION_AND: "and",
  LOGIC_OPERATION_TOOLTIP_OR: "Return true if at least one of the inputs is true.",
  LOGIC_OPERATION_OR: "or",
  TEXT_TEXT_TOOLTIP: "A letter, word, or line of text.",
  TEXT_SELECT: "Substring of %1 from %2 to %3",
  TEXT_LENGTH: "Length of %1",
  TEXT_CONTAIN: "%1 contains %2",
  TEXT_SPLIT: "Split %1 by %2",
  TEXT_JOIN_TOOLTIP: "Create a piece of text by joining together a_ny number of items.",
  TEXT_JOIN_TITLE_HEAD: "put",
  TEXT_JOIN_TITLE_TAIL: "together",
  VARIABLES_GET: "%1",
  VARIABLES_SET: "Set variable %1 to %2",
  CHANGE_VARIABLE: "%2 variable %1 by %3",
  INCREASE: "Increase",
  DECREASE: "Decrease",
  LISTS_GET: "%1",
  LISTS_APPEND: "Append %1 to the last of list %2",
  LISTS_INSERT_VALUE: "Insert %3 at %2 of %1",
  LISTS_COPY: "Copy lists %2 to %1",
  LISTS_LENGTH: "Get the length of list %1",
  LISTS_IS_EXIST: "If list %1 contains %2",
  LISTS_INDEX_OF: "Index of %1 in %2",
  PROCEDURES_PARAMETER: "Parameter %1",
  PROCEDURES_RETURN_VALUE: "Return %1 %2",
  PROCEDURES_DEFNORETURN_TITLE: "Define function",
  PROCEDURES_DEFNORETURN_PROCEDURE: "Function",
  PROCEDURES_DEFNORETURN_TOOLTIP: "create a function.",
  PROCEDURES_DEFRETURN_RETURN: "Return",
  COLOR_PICKER: "%1",
  RED: "Red",
  GREEN: "Green",
  BLUE: "Blue",
  HUE: "Hue",
  SATURATION: "Saturation",
  BRIGHTNESS: "Brightness",
  OPACITY: "Opacity",
  SELECT_COLOR_PARAM_TYPE: "Select color selection method",
  COLOR_PREVIEW: "Color preview"
};