"use strict";

Object.defineProperty(exports, "__esModule", {
  value: !0
});
exports.WHILE_TYPES = exports.USERWHITESPACABLE_TYPES = exports.UNARYLIKE_TYPES = exports.TYPESCRIPT_TYPES = exports.TSTYPE_TYPES = exports.TSTYPEELEMENT_TYPES = exports.TSENTITYNAME_TYPES = exports.TSBASETYPE_TYPES = exports.TERMINATORLESS_TYPES = exports.STATEMENT_TYPES = exports.STANDARDIZED_TYPES = exports.SCOPABLE_TYPES = exports.PUREISH_TYPES = exports.PROPERTY_TYPES = exports.PRIVATE_TYPES = exports.PATTERN_TYPES = exports.PATTERNLIKE_TYPES = exports.OBJECTMEMBER_TYPES = exports.MODULESPECIFIER_TYPES = exports.MODULEDECLARATION_TYPES = exports.MISCELLANEOUS_TYPES = exports.METHOD_TYPES = exports.LVAL_TYPES = exports.LOOP_TYPES = exports.LITERAL_TYPES = exports.JSX_TYPES = exports.IMMUTABLE_TYPES = exports.FUNCTION_TYPES = exports.FUNCTIONPARENT_TYPES = exports.FOR_TYPES = exports.FORXSTATEMENT_TYPES = exports.FLOW_TYPES = exports.FLOWTYPE_TYPES = exports.FLOWPREDICATE_TYPES = exports.FLOWDECLARATION_TYPES = exports.FLOWBASEANNOTATION_TYPES = exports.EXPRESSION_TYPES = exports.EXPRESSIONWRAPPER_TYPES = exports.EXPORTDECLARATION_TYPES = exports.ENUMMEMBER_TYPES = exports.ENUMBODY_TYPES = exports.DECLARATION_TYPES = exports.CONDITIONAL_TYPES = exports.COMPLETIONSTATEMENT_TYPES = exports.CLASS_TYPES = exports.BLOCK_TYPES = exports.BLOCKPARENT_TYPES = exports.BINARY_TYPES = void 0;
var r = require("./2646/index");
var a = r.FLIPPED_ALIAS_KEYS.Standardized;
exports.STANDARDIZED_TYPES = a;
var i = r.FLIPPED_ALIAS_KEYS.Expression;
exports.EXPRESSION_TYPES = i;
var o = r.FLIPPED_ALIAS_KEYS.Binary;
exports.BINARY_TYPES = o;
var s = r.FLIPPED_ALIAS_KEYS.Scopable;
exports.SCOPABLE_TYPES = s;
var u = r.FLIPPED_ALIAS_KEYS.BlockParent;
exports.BLOCKPARENT_TYPES = u;
var l = r.FLIPPED_ALIAS_KEYS.Block;
exports.BLOCK_TYPES = l;
var p = r.FLIPPED_ALIAS_KEYS.Statement;
exports.STATEMENT_TYPES = p;
var f = r.FLIPPED_ALIAS_KEYS.Terminatorless;
exports.TERMINATORLESS_TYPES = f;
var d = r.FLIPPED_ALIAS_KEYS.CompletionStatement;
exports.COMPLETIONSTATEMENT_TYPES = d;
var c = r.FLIPPED_ALIAS_KEYS.Conditional;
exports.CONDITIONAL_TYPES = c;
var y = r.FLIPPED_ALIAS_KEYS.Loop;
exports.LOOP_TYPES = y;
var T = r.FLIPPED_ALIAS_KEYS.While;
exports.WHILE_TYPES = T;
var m = r.FLIPPED_ALIAS_KEYS.ExpressionWrapper;
exports.EXPRESSIONWRAPPER_TYPES = m;
var S = r.FLIPPED_ALIAS_KEYS.For;
exports.FOR_TYPES = S;
var E = r.FLIPPED_ALIAS_KEYS.ForXStatement;
exports.FORXSTATEMENT_TYPES = E;
var b = r.FLIPPED_ALIAS_KEYS.Function;
exports.FUNCTION_TYPES = b;
var v = r.FLIPPED_ALIAS_KEYS.FunctionParent;
exports.FUNCTIONPARENT_TYPES = v;
var P = r.FLIPPED_ALIAS_KEYS.Pureish;
exports.PUREISH_TYPES = P;
var O = r.FLIPPED_ALIAS_KEYS.Declaration;
exports.DECLARATION_TYPES = O;
var A = r.FLIPPED_ALIAS_KEYS.PatternLike;
exports.PATTERNLIKE_TYPES = A;
var g = r.FLIPPED_ALIAS_KEYS.LVal;
exports.LVAL_TYPES = g;
var x = r.FLIPPED_ALIAS_KEYS.TSEntityName;
exports.TSENTITYNAME_TYPES = x;
var D = r.FLIPPED_ALIAS_KEYS.Literal;
exports.LITERAL_TYPES = D;
var I = r.FLIPPED_ALIAS_KEYS.Immutable;
exports.IMMUTABLE_TYPES = I;
var _ = r.FLIPPED_ALIAS_KEYS.UserWhitespacable;
exports.USERWHITESPACABLE_TYPES = _;
var h = r.FLIPPED_ALIAS_KEYS.Method;
exports.METHOD_TYPES = h;
var N = r.FLIPPED_ALIAS_KEYS.ObjectMember;
exports.OBJECTMEMBER_TYPES = N;
var j = r.FLIPPED_ALIAS_KEYS.Property;
exports.PROPERTY_TYPES = j;
var L = r.FLIPPED_ALIAS_KEYS.UnaryLike;
exports.UNARYLIKE_TYPES = L;
var C = r.FLIPPED_ALIAS_KEYS.Pattern;
exports.PATTERN_TYPES = C;
var B = r.FLIPPED_ALIAS_KEYS.Class;
exports.CLASS_TYPES = B;
var w = r.FLIPPED_ALIAS_KEYS.ModuleDeclaration;
exports.MODULEDECLARATION_TYPES = w;
var M = r.FLIPPED_ALIAS_KEYS.ExportDeclaration;
exports.EXPORTDECLARATION_TYPES = M;
var F = r.FLIPPED_ALIAS_KEYS.ModuleSpecifier;
exports.MODULESPECIFIER_TYPES = F;
var R = r.FLIPPED_ALIAS_KEYS.Private;
exports.PRIVATE_TYPES = R;
var K = r.FLIPPED_ALIAS_KEYS.Flow;
exports.FLOW_TYPES = K;
var V = r.FLIPPED_ALIAS_KEYS.FlowType;
exports.FLOWTYPE_TYPES = V;
var k = r.FLIPPED_ALIAS_KEYS.FlowBaseAnnotation;
exports.FLOWBASEANNOTATION_TYPES = k;
var Y = r.FLIPPED_ALIAS_KEYS.FlowDeclaration;
exports.FLOWDECLARATION_TYPES = Y;
var U = r.FLIPPED_ALIAS_KEYS.FlowPredicate;
exports.FLOWPREDICATE_TYPES = U;
var X = r.FLIPPED_ALIAS_KEYS.EnumBody;
exports.ENUMBODY_TYPES = X;
var W = r.FLIPPED_ALIAS_KEYS.EnumMember;
exports.ENUMMEMBER_TYPES = W;
var J = r.FLIPPED_ALIAS_KEYS.JSX;
exports.JSX_TYPES = J;
var H = r.FLIPPED_ALIAS_KEYS.Miscellaneous;
exports.MISCELLANEOUS_TYPES = H;
var q = r.FLIPPED_ALIAS_KEYS.TypeScript;
exports.TYPESCRIPT_TYPES = q;
var G = r.FLIPPED_ALIAS_KEYS.TSTypeElement;
exports.TSTYPEELEMENT_TYPES = G;
var z = r.FLIPPED_ALIAS_KEYS.TSType;
exports.TSTYPE_TYPES = z;
var Q = r.FLIPPED_ALIAS_KEYS.TSBaseType;
exports.TSBASETYPE_TYPES = Q;